{"sheet": "global", "col": "", "row": "fancy_chooser", "longname": "unset-option", "input": "", "keystrokes": "", "comment": ""}
{"longname": "open-file", "input": "input", "keystrokes": "o"}
{"sheet": "input", "col": "text", "row": "", "longname": "split-col", "input": " ", "keystrokes": "Space;", "comment": "Add new columns from regex split"}
{"sheet": "input", "col": "text_re0", "row": "", "longname": "rename-col", "input": "direction", "keystrokes": "^", "comment": "edit name of current column"}
{"sheet": "input", "col": "text_re1", "row": "", "longname": "rename-col", "input": "magnitude", "keystrokes": "^", "comment": "edit name of current column"}
{"sheet": "input", "col": "magnitude", "row": "", "longname": "addcol-expr", "input": "magnitude if direction == 'down' else -magnitude if direction == 'up' else None", "keystrokes": "=", "comment": "create new column from Python expression, with column names as variables"}
{"sheet": "input", "col": "magnitude if direction == 'down' else -magnitude if direction == 'up' else None", "row": "", "longname": "rename-col", "input": "delta_aim", "keystrokes": "^", "comment": "edit name of current column"}
{"sheet": "input", "col": "delta_aim", "row": "", "longname": "hide-col", "input": "", "keystrokes": "-", "comment": "Hide current column"}
{"sheet": "input", "col": "magnitude", "row": "", "longname": "addcol-expr", "input": "magnitude if direction == 'down' else -magnitude if direction == 'up' else None", "keystrokes": "=", "comment": "create new column from Python expression, with column names as variables"}
{"sheet": "input", "col": "magnitude if direction == 'down' else -magnitude if direction == 'up' else None", "row": "", "longname": "freeze-col", "input": "", "keystrokes": "'", "comment": "add a frozen copy of current column with all cells evaluated"}
{"sheet": "input", "col": "magnitude if direction == 'down' else -magnitude if direction == 'up' else None", "row": "", "longname": "hide-col", "input": "", "keystrokes": "-", "comment": "Hide current column"}
{"sheet": "input", "col": "magnitude if direction == 'down' else -magnitude if direction == 'up' else None_frozen", "row": "", "longname": "rename-col", "input": "delta_aim", "keystrokes": "^", "comment": "edit name of current column"}
{"sheet": "input", "col": "magnitude", "row": "", "longname": "type-int", "input": "", "keystrokes": "#", "comment": "set type of current column to int"}
{"sheet": "input", "col": "delta_aim", "row": "", "longname": "hide-col", "input": "", "keystrokes": "-", "comment": "Hide current column"}
{"sheet": "input", "col": "magnitude", "row": "", "longname": "addcol-expr", "input": "magnitude if direction == 'down' else -magnitude if direction == 'up' else None", "keystrokes": "=", "comment": "create new column from Python expression, with column names as variables"}
{"sheet": "input", "col": "magnitude if direction == 'down' else -magnitude if direction == 'up' else None", "row": "", "longname": "freeze-col", "input": "", "keystrokes": "'", "comment": "add a frozen copy of current column with all cells evaluated"}
{"sheet": "input", "col": "magnitude if direction == 'down' else -magnitude if direction == 'up' else None", "row": "", "longname": "hide-col", "input": "", "keystrokes": "-", "comment": "Hide current column"}
{"sheet": "input", "col": "magnitude if direction == 'down' else -magnitude if direction == 'up' else None_frozen", "row": "", "longname": "rename-col", "input": "delta_aim", "keystrokes": "^", "comment": "edit name of current column"}
{"sheet": "input", "col": "delta_aim", "row": "", "longname": "addcol-expr", "input": "sum(sheet.colsByName['delta_aim'].getValues(sheet.rows[:A]))", "keystrokes": "=", "comment": "create new column from Python expression, with column names as variables"}
{"sheet": "input", "col": "sum(sheet.colsByName['delta_aim'].getValues(sheet.rows[:A]))", "row": "", "longname": "hide-col", "input": "", "keystrokes": "-", "comment": "Hide current column"}
{"sheet": "input", "col": "", "row": "", "longname": "addcol-incr", "input": "", "keystrokes": "i", "comment": "add column with incremental values"}
{"sheet": "input", "col": "", "row": "", "longname": "select-rows", "input": "", "keystrokes": "gs", "comment": "select all rows"}
{"sheet": "input", "col": "A", "row": "", "longname": "setcol-expr", "input": "A-1", "keystrokes": "g=", "comment": "set current column for selected rows to result of Python expression"}
{"sheet": "input", "col": "", "row": "", "longname": "unselect-rows", "input": "", "keystrokes": "gu", "comment": "unselect all rows"}
{"sheet": "input", "col": "delta_aim", "row": "", "longname": "addcol-expr", "input": "sum(sheet.colsByName['delta_aim'].getValues(sheet.rows[:A]))", "keystrokes": "=", "comment": "create new column from Python expression, with column names as variables"}
{"sheet": "input", "col": "sum(sheet.colsByName['delta_aim'].getValues(sheet.rows[:A]))", "row": "", "longname": "freeze-col", "input": "", "keystrokes": "'", "comment": "add a frozen copy of current column with all cells evaluated"}
{"sheet": "input", "col": "sum(sheet.colsByName['delta_aim'].getValues(sheet.rows[:A]))", "row": "", "longname": "hide-col", "input": "", "keystrokes": "-", "comment": "Hide current column"}
{"sheet": "input", "col": "sum(sheet.colsByName['delta_aim'].getValues(sheet.rows[:A]))_frozen", "row": "", "longname": "rename-col", "input": "aim", "keystrokes": "^", "comment": "edit name of current column"}
{"sheet": "input", "col": "aim", "row": "", "longname": "hide-col", "input": "", "keystrokes": "-", "comment": "Hide current column"}
{"sheet": "input", "col": "delta_aim", "row": "", "longname": "addcol-expr", "input": "sum(sheet.colsByName['delta_aim'].getValues(sheet.rows[:A+1]))", "keystrokes": "=", "comment": "create new column from Python expression, with column names as variables"}
{"sheet": "input", "col": "sum(sheet.colsByName['delta_aim'].getValues(sheet.rows[:A+1]))", "row": "", "longname": "freeze-col", "input": "", "keystrokes": "'", "comment": "add a frozen copy of current column with all cells evaluated"}
{"sheet": "input", "col": "sum(sheet.colsByName['delta_aim'].getValues(sheet.rows[:A+1]))", "row": "", "longname": "hide-col", "input": "", "keystrokes": "-", "comment": "Hide current column"}
{"sheet": "input", "col": "sum(sheet.colsByName['delta_aim'].getValues(sheet.rows[:A+1]))_frozen", "row": "", "longname": "rename-col", "input": "aim", "keystrokes": "^", "comment": "edit name of current column"}
{"sheet": "input", "col": "aim", "row": "", "longname": "addcol-expr", "input": "magnitude if direction == 'forward' else None", "keystrokes": "=", "comment": "create new column from Python expression, with column names as variables"}
{"sheet": "input", "col": "magnitude if direction == 'forward' else None", "row": "", "longname": "rename-col", "input": "delta_horizontal", "keystrokes": "^", "comment": "edit name of current column"}
{"sheet": "input", "col": "delta_horizontal", "row": "", "longname": "addcol-expr", "input": "aim * magnitude if direction == 'forward' else None", "keystrokes": "=", "comment": "create new column from Python expression, with column names as variables"}
{"sheet": "input", "col": "aim * magnitude if direction == 'forward' else None", "row": "", "longname": "freeze-col", "input": "", "keystrokes": "'", "comment": "add a frozen copy of current column with all cells evaluated"}
{"sheet": "input", "col": "aim * magnitude if direction == 'forward' else None", "row": "", "longname": "hide-col", "input": "", "keystrokes": "-", "comment": "Hide current column"}
{"sheet": "input", "col": "aim * magnitude if direction == 'forward' else None_frozen", "row": "", "longname": "rename-col", "input": "delta_depth", "keystrokes": "^", "comment": "edit name of current column"}
{"sheet": "input", "col": "delta_horizontal", "row": "", "longname": "aggregate-col", "input": "sum", "keystrokes": "+", "comment": "Add aggregator to current column"}
{"sheet": "input", "col": "delta_depth", "row": "", "longname": "aggregate-col", "input": "sum", "keystrokes": "+", "comment": "Add aggregator to current column"}
{"sheet": "input", "col": "", "row": "", "longname": "freq-keys", "input": "", "keystrokes": "gShift+F", "comment": "open Frequency Table grouped by all key columns on source sheet, with aggregations of other columns"}
{"sheet": "input__freq", "col": "count", "row": "", "longname": "show-expr", "input": "delta_horizontal_sum * delta_depth_sum", "keystrokes": "", "comment": "create new column from Python expression, with column names as variables"}
